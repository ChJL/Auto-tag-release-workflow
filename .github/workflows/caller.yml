on:
  push:
    branches:
      - main
jobs:
  create-new-tag:
#     if: "!contains(github.event.head_commit.message, 'Bump version in pyproject.toml')"
    name: 'create_tags'
    secrets:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    uses: ChJL/workflow-test/.github/workflows/git_tag.yml@main


  update-version:
    name: Update version
    needs: create-new-tag
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: toml-cli
        run: |
          pip install toml-cli
          toml get --toml-path pyproject.toml tool.poetry.name
          toml set --toml-path pyproject.toml tool.poetry.version ${{ needs.create-new-tag.outputs.new_version}}
          
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update pyproject version
          

  update-tag:
    runs-on: ubuntu-latest
    needs:
      - update-version
      - create-new-tag
    steps:
      - name: Update tag
        uses: richardsimko/update-tag@v1
        with:
          tag_name: ${{ needs.create-new-tag.outputs.new_tag}}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          
  simulate-push-to-ecr:
    needs:
      - update-tag
    runs-on: ubuntu-latest
    steps:
      - name: Simulate succeess or failure
        run: |
         echo "ecr success!"
         
  create-release:
    needs:
      - simulate-push-to-ecr
      - create-new-tag
#     if: contains(github.event.head_commit.message, 'Bump version in pyproject.toml')
    uses: ChJL/workflow-test/.github/workflows/git_release.yml@main
    secrets:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
    with:
        TAG: ${{needs.create-new-tag.outputs.new_tag}}


# This section can be used when you want to delete the tag
# Remember to set the condition (e.g. if: )
  delete-tag:
     needs: 
     - simulate-push-to-ecr
     - create-new-tag
     if: "always() && (needs.simulate-push-to-ecr.result == 'failure')"
     runs-on: ubuntu-latest
     steps:
     - name: checkout
       uses: actions/checkout@v2.4.0
       with:
          token: ${{ secrets.GH_TOKEN }}
     - name: delete tag command
       run: |
          git push --delete origin ${{needs.create-new-tag.outputs.new_tag}}
  
  re-update-pyproject:
    needs:
    - delete-tag
    - create-new-tag
    if: "always() && (needs.delete-tag.result == 'success')"
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: toml-cli
        run: |
          pip install toml-cli
          toml get --toml-path pyproject.toml tool.poetry.name
          toml set --toml-path pyproject.toml tool.poetry.version ${{ needs.create-new-tag.outputs.previous_version}}
          
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Reverse pyproject version
    


