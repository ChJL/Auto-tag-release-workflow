name: Caller
on:
  push:
    branches: [main]
jobs:
  create-new-tag:
    if: "!contains(github.event.head_commit.message, 'Bump version in pyproject.toml')"
    name: 'create_tags'
    secrets:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    uses: ChJL/workflow-test/.github/workflows/git_tag.yml@main


  update-toml:
    needs:
      - create-new-tag
    if: ${{ needs.create-new-tag.outputs.new_tag }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2.4.0
        with:
          token: ${{ secrets.GH_TOKEN }}
      - name: run pwd ls
        run: |
          pwd
          ls -a
      - name: edit Toml
        uses: ciiiii/toml-editor@1.0.0
        with:
          file: "pyproject.toml"
          key: "tool.poetry.version"
          value: ${{ needs.create-new-tag.outputs.new_version }}
      - name: check for changes
        run: git status
      - name: Commit changes
        uses: EndBug/add-and-commit@v8
        with:
          author_name: GitHub Actions
          author_email: 41898282+github-actions[bot]@users.noreply.github.com
          message: 'Bump version in pyproject.toml'
          add: '.'
          
  check-commit-message:
    outputs:
      tag: ${{steps.taketag.outputs.tag}}
    if: contains(github.event.head_commit.message, 'Bump version in pyproject.toml')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
      - name: Retrieve tag
        id: taketag
        run: |
          git describe --tags --abbrev=0
          GIT_TAG=`echo $(git describe --tags --abbrev=0)`
          echo ::set-output name=tag::$GIT_TAG
          echo "GIT_TAG=`echo $(git describe --tags --abbrev=0)`" >> $GITHUB_ENV
      - name: Check output
        run: |
          echo ${{ steps.taketag.outputs.tag}}

  update-tag:
    runs-on: ubuntu-latest
    needs:
      - check-commit-message
    steps:
      - name: Update tag
        uses: richardsimko/update-tag@v1
        with:
          tag_name: ${{ needs.check-commit-message.outputs.tag}}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  simulate-push-to-ecr:
    needs:
      - update-tag
    runs-on: ubuntu-latest
    steps:
      - name: Simulate succeess or failure
        run: |
          git describe --tags --abbrrev=0


  create-release:
    needs:
      - check-commit-message
      - simulate-push-to-ecr
    if: contains(github.event.head_commit.message, 'Bump version in pyproject.toml')
    uses: ChJL/workflow-test/.github/workflows/git_release.yml@main
    secrets:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
    with:
        TAG: ${{needs.check-commit-message.outputs.tag}}


# This section can be used when you want to delete the tag
# Remember to set the condition (e.g. if: )
  delete-tag:
     needs: 
     - check-commit-message
     - simulate-push-to-ecr
     if: "always() && (needs.simulate-push-to-ecr.outputs.job_status != 'success')"
     runs-on: ubuntu-latest
     steps:
     - name: checkout
       uses: actions/checkout@v2.4.0
       with:
          token: ${{ secrets.GH_TOKEN }}
     - name: delete tag command
       run: |
          git push --delete origin ${{ needs.create-new-tag.outputs.new_tag }}
        
#   check-tag:
#     needs: check-commit-message
#     runs-on: ubuntu-latest
#     steps:
#       - name: check tag name
#         run: |
#           echo ${{needs.check-commit-message.outputs.tag}}




#   check-tag-name:
#     needs: create-new-tag
#     runs-on: ubuntu-latest
#     steps:
#       - name: Check Output Parameters
#         run: |
#           echo "Got tag name ${{ needs.create-new-tag.outputs.new_tag }}"
#           echo "Got release version ${{ needs.create-new-tag.outputs.new_version }}"
#           echo "Got previous version ${{ needs.create-new-tag.outputs.previous_version }}"
#           echo "Got previous tag ${{ needs.create-new-tag.outputs.previous_tag }}"
#           echo "Got release type ${{ needs.create-new-tag.outputs.release_type }}"
#           echo "Got changelog ${{ needs.create-new-tag.outputs.changelog }}"
