on:
  push:
    branches:
      - main
jobs:
  create-new-tag:
    if: "!contains(github.event.head_commit.message, 'pyproject version')"
    name: 'create_tags'
    secrets:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    uses: ChJL/workflow-test/.github/workflows/git_tag.yml@main

#   update-version:
#     name: Update version
#     needs: create-new-tag
#     runs-on: ubuntu-latest
#     steps:
#       - name: Set up Python 3.7
#         uses: actions/setup-python@v1
#         with:
#           python-version: '3.7'

#       - uses: actions/checkout@v2
#         with:
#           ref: ${{ github.head_ref }}

#       - name: toml-cli
#         run: |
#           pip install toml-cli
#           toml get --toml-path pyproject.toml tool.poetry.name
#           toml set --toml-path pyproject.toml tool.poetry.version ${{ needs.create-new-tag.outputs.new_version}}

#       - uses: stefanzweifel/git-auto-commit-action@v4
#         with:
#           commit_message: Update pyproject version
#       - uses: ncipollo/release-action@v1
#         with:
#           tag: ${{ needs.create-new-tag.outputs.new_version }}
#           name: Release ${{ needs.create-new-tag.outputs.new_version }}

  simulate-push-to-ecr:
    needs:
      - create-new-tag
    runs-on: ubuntu-latest
    steps:
      - name: Simulate succeess or failure
        run: |
          echo "ecr sucess!"


  # This section can be used when you want to delete the tag
  # Remember to set the condition (e.g. if: )
  delete-tag:
    needs:
      - simulate-push-to-ecr
      - create-new-tag
    if: "always() || (needs.simulate-push-to-ecr.result == 'failure')"
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2.4.0
        with:
          token: ${{ secrets.GH_TOKEN }}
      - name: delete tag command
        run: |
          git push --delete origin ${{needs.create-new-tag.outputs.new_tag}}

  create-release:
    needs:
      - create-new-tag
      - simulate-push-to-ecr
      - delete-tag
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: toml-cli
        run: |
          pip install toml-cli
          toml get --toml-path pyproject.toml tool.poetry.name
          toml set --toml-path pyproject.toml tool.poetry.version ${{ needs.create-new-tag.outputs.new_version}}
      

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update pyproject version
          
      - uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.create-new-tag.outputs.new_tag }}
          name: Release ${{ needs.create-new-tag.outputs.new_version }}
