name: Caller
on:
  push:
    branches: [ main ]
jobs:
  check-commit-message:
   outputs:
      tag: ${{steps.taketag.outputs.tagg}}
   if: contains(github.event.head_commit.message, 'Bump version in pyproject.toml')
   runs-on: ubuntu-latest
   steps:
     - name: Checkout
       uses: actions/checkout@v2.4.0
       with:
         fetch-depth: 0
         token: ${{ secrets.GH_TOKEN }}
     - name: Retrieve tag
       id: taketag
       run: |
         git status
         echo 'check commit message included'
         git describe --tags --abbrev=0
         GIT_TAG=`echo $(git describe --tags --abbrev=0)`
         echo ::set-output name=tagg::$GIT_TAG
         echo "GIT_TAG=`echo $(git describe --tags --abbrev=0)`" >> $GITHUB_ENV
     - name: Check output
       run: |
          echo ${{ steps.taketag.outputs.tagg}}
          echo ${{env.GIT_TAG}}
    
  compute-tag:
    runs-on: ubuntu-latest
    steps:
      - name: compute tag
        id: computetag
        uses: craig-day/compute-tag@v10
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          version_type: patch
    
    
#   check-tag:
#     needs: check-commit-message
#     runs-on: ubuntu-latest
#     steps:
#       - name: check tag name
#         run: |
#           echo ${{needs.check-commit-message.outputs.tag}}
    
#   create-new-tag:
#     if: "!contains(github.event.head_commit.message, 'Bump version in pyproject.toml')"
#     name: 'create_tags'
#     secrets:
#       GH_TOKEN: ${{ secrets.GH_TOKEN }}
#     uses: ChJL/workflow-test/.github/workflows/git_tag.yml@main

#   check-tag-name:
#     needs: create-new-tag
#     runs-on: ubuntu-latest
#     steps:
#       - name: Check Output Parameters
#         run: |
#           echo "Got tag name ${{ needs.create-new-tag.outputs.new_tag }}"
#           echo "Got release version ${{ needs.create-new-tag.outputs.new_version }}"
#           echo "Got previous version ${{ needs.create-new-tag.outputs.previous_version }}"
#           echo "Got previous tag ${{ needs.create-new-tag.outputs.previous_tag }}"
#           echo "Got release type ${{ needs.create-new-tag.outputs.release_type }}"
#           echo "Got changelog ${{ needs.create-new-tag.outputs.changelog }}"


# # This section can be used when you want to delete the tag
# # Remember to set the condition (e.g. if: )
#   delete-tag:
#      needs: create-new-tag
#      runs-on: ubuntu-latest
#      steps:
#      - name: checkout
#        uses: actions/checkout@v2.4.0
#        with:
#           token: ${{ secrets.GH_TOKEN }}
#      - name: delete tag command
#        run: |
#           git push --delete origin ${{ needs.create-new-tag.outputs.new_tag }}

#   update-toml:
#     needs: 
#       - create-new-tag
#     if: ${{ needs.create-new-tag.outputs.new_tag }}
#     runs-on: ubuntu-latest
#     steps:
#       - name: checkout
#         uses: actions/checkout@v2.4.0
#         with:
#           token: ${{ secrets.GH_TOKEN }}
#       - name: run pwd ls
#         run: |
#           pwd
#           ls -a
#       - name: edit Toml
#         uses: ciiiii/toml-editor@1.0.0
#         with:
#           file: "pyproject.toml"
#           key: "tool.poetry.version"
#           value: ${{ needs.create-new-tag.outputs.new_version }}
#       - name: check for changes
#         run: git status
#       - name: Commit changes
#         uses: EndBug/add-and-commit@v8
#         with:
#           author_name: GitHub Actions
#           author_email: 41898282+github-actions[bot]@users.noreply.github.com
#           message: 'Bump version in pyproject.toml'
#           add: '.'

#   create-tag-by-command:
#      needs: 
#        - update-toml
#        - create-new-tag
#      runs-on: ubuntu-latest
#      steps:
#      - name: checkout
#        uses: actions/checkout@v2.4.0
#        with:
#           token: ${{ secrets.GH_TOKEN }}
#      - name: create tag command
#        run: |
#           git tag  ${{ needs.create-new-tag.outputs.new_tag }}
#           git push origin ${{ needs.create-new-tag.outputs.new_tag }}

#   create-release:
#     needs:
#       - check-commit-message
#     if: contains(github.event.head_commit.message, 'Bump version in pyproject.toml')
#     uses: ChJL/workflow-test/.github/workflows/git_release.yml@main
#     secrets:
#         GH_TOKEN: ${{ secrets.GH_TOKEN }}
#     with:
#         TAG: ${{needs.check-commit-message.outputs.tag}}

        
#  # another way for commit and push
#       - name: stage changed files
#         run: git add .
#       - name: Commit files
#         run: |
#           git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
#           git config --local user.name "github-actions[bot]"
#           git commit -m "Bump version in pyproject.toml" -a
#       - name: Push changes
#         uses: ad-m/github-push-action@master
#       - name: check for changes
#         run: git status
        
